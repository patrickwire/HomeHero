{"version":3,"sources":["screens/login.tsx","screens/drawer.tsx","components/Avatar.tsx","components/ProfielContainer.tsx","components/PointBars.tsx","screens/home.tsx","screens/logout.tsx","screens/profile.tsx","components/UploadAvatar.tsx","screens/register.tsx","screens/resetPassword.tsx","screens/onboarding.tsx","App.tsx","firebase.config.ts","serviceWorker.ts","index.tsx","assets/icon_star_white.svg","assets/icon_star_purple.svg","assets/avatar_preview.svg","assets/banner_orange.svg","assets/banner_blue.svg","assets/banner_red.svg"],"names":["Login","props","React","email","setEmail","password","setPassword","history","AuthContext","useHistory","TextField","id","label","type","onChange","e","target","value","Button","variant","color","onClick","auth","setPersistence","Auth","Persistence","LOCAL","signInWithEmailAndPassword","push","error","alert","className","to","useStyles","makeStyles","theme","root","display","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","width","easeOut","enteringScreen","marginRight","title","flexGrow","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","spacing","mixins","toolbar","justifyContent","content","contentShift","PersistentDrawerRight","classes","useTheme","useState","open","setOpen","userAuth","useContext","CssBaseline","AppBar","position","clsx","Toolbar","Typography","noWrap","IconButton","aria-label","edge","Drawer","anchor","paper","direction","Divider","List","loggedIn","ListItem","button","key","ListItemIcon","ListItemText","primary","signOut","Avatar","src","url","asset","ProfileContainer","avatar","username","style","height","paddingLeft","icon_star_purple","PointBars","banner_red","icon_star_white","banner_blue","banner_orange","Home","setUsername","setAvatar","useEffect","uid","firestore","collection","doc","get","then","snapshot","exists","data","toUpperCase","update","actions","FieldValue","arrayUnion","points","date","moment","toISOString","Logout","Profile","ImageUpload","state","image","progress","handleUpload","console","log","storage","ref","name","put","on","Math","round","bytesTransferred","totalBytes","setState","child","getDownloadURL","this","accept","files","size","Component","Register","createUserWithEmailAndPassword","res","user","set","ResetPassword","send","setSend","sendPasswordResetEmail","Onboarding","createMuiTheme","palette","deepPurple","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","createContext","About","App","setUserAuth","onAuthStateChanged","a","undefined","ThemeProvider","Provider","location","pathname","maxWidth","path","Boolean","window","hostname","match","cordova","document","addEventListener","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message","module","exports"],"mappings":"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","file":"static/js/main.6dd1f4ab.chunk.js","sourcesContent":["import * as React from \"react\";\nimport { auth } from \"firebase\";\nimport { AuthContext } from \"../App\";\nimport { Redirect, useHistory, Link } from \"react-router-dom\";\nimport { TextField, Button } from \"@material-ui/core\";\n\ninterface Props {}\n\nexport const Login = (props: Props) => {\n  const [email, setEmail] = React.useState(\"\");\n  const [password, setPassword] = React.useState(\"\");\n  const userAuth = React.useContext(AuthContext);\n  const history = useHistory();\n  const onLogin = () => {\n    try {\n      auth().setPersistence(auth.Auth.Persistence.LOCAL);\n      const result = auth().signInWithEmailAndPassword(email, password);\n      history.push(\"/\");\n    } catch (error) {\n      alert(\"wrong login\");\n    }\n  };\n  return (\n    <div>\n      <h1>Login</h1>\n\n      <TextField\n        id=\"outlined-basic\"\n        label=\"email\"\n       \n        type=\"email\"\n        onChange={e => setEmail(e.target.value)}\n        value={email}\n      />\n      <br />\n      <br />\n      <TextField\n        id=\"outlined-basic\"\n        label=\"password\"\n       \n        type=\"password\"\n        onChange={e => setPassword(e.target.value)}\n        value={password}\n      />\n      <br />\n      <br />\n      <Button variant=\"contained\" color=\"primary\" onClick={onLogin}>\n        Login\n      </Button>\n      <br></br>\n        <div className=\"RegisterLink\">\n          <Link className=\"Link\" to=\"/register\">Register</Link><b>  |  </b>\n          <Link className=\"Link\" to=\"/resetPassword\">Reset Password</Link>\n        </div>\n    </div>\n  );\n};\n","import React, {useContext} from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport PersonIcon from '@material-ui/icons/Person';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport HomeIcon from '@material-ui/icons/Home';\nimport InfoIcon from '@material-ui/icons/Info';\nimport {Link} from \"react-router-dom\";\nimport {auth} from \"firebase\";\nimport {AuthContext} from \"../App\";\n\nconst drawerWidth = 240;\ninterface Props{}\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginRight: drawerWidth,\n  },\n  title: {\n    flexGrow: 1,\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-start',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginRight: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginRight: 0,\n  },\n}));\n\nexport const PersistentDrawerRight=(props:Props)=> {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n  const userAuth=useContext(AuthContext);\n\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n      >\n        <Toolbar>\n          <Typography variant=\"h6\" noWrap className={classes.title}>\n            HomeHero\n          </Typography>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            edge=\"end\"\n            onClick={handleDrawerOpen}\n            className={clsx(open && classes.hide)}\n          >\n            <MenuIcon />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <main>\n        <div className={classes.drawerHeader} />\n      </main>\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"right\"\n        open={open}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <div className={classes.drawerHeader}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === 'rtl' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n          </IconButton>\n        </div>\n        <Divider />\n\n        <List>\n          {!userAuth.loggedIn&&\n            <Link className=\"Link\" to=\"/login\">\n              <ListItem button key=\"Login\">\n                <ListItemIcon><ExitToAppIcon /></ListItemIcon>\n                <ListItemText primary=\"Login\" />\n              </ListItem>\n            </Link>}\n\n          {userAuth.loggedIn&&<div>\n           <Link className=\"Link\" onClick={() => auth().signOut()} to=\"/logout\">\n            <ListItem button key=\"Logout\">\n              <ListItemIcon><ExitToAppIcon /></ListItemIcon>\n              <ListItemText primary=\"Logout\" />\n            </ListItem>\n          </Link>\n          <Link className=\"Link\" to=\"/profile\">\n            <ListItem button key=\"Profile\">\n              <ListItemIcon><PersonIcon /></ListItemIcon>\n              <ListItemText primary=\"Profile\" />\n            </ListItem>\n           </Link></div>\n            }\n\n        </List>\n        <Divider />\n        <List>\n          {userAuth.loggedIn&&<div>\n          <Link className=\"Link\" to=\"/\">\n            <ListItem button key=\"Home\">\n              <ListItemIcon><HomeIcon /></ListItemIcon>\n              <ListItemText primary=\"Home\" />\n            </ListItem>\n          </Link>\n          </div>}\n\n          <Link className=\"Link\" to=\"/about\">\n            <ListItem button key=\"About\">\n              <ListItemIcon><InfoIcon /></ListItemIcon>\n              <ListItemText primary=\"About\" />\n            </ListItem>\n          </Link>\n        </List>\n      </Drawer>\n    </div>\n  );\n}","import React, { useEffect, useState, useContext } from \"react\";\nimport \"./Avatar.css\";\nimport asset from \"../assets/avatar_preview.svg\"\ninterface Props{\n    url:string;\n}\n\nexport const Avatar=(props:Props)=> {  \nreturn(\n    <div  className=\"avatarFrame\"><img src={props.url||asset}/></div>\n   );\n  }","import React from \"react\";\n\nimport icon_star_purple from \"../assets/icon_star_purple.svg\";\n\nimport { Avatar } from \"./Avatar\";\n\ninterface Props {avatar:string,username:string}\nexport const ProfileContainer=(props:Props)=>{\n    return(<div className=\"ProfileContainer\">\n    <div className=\"ProfilePic\">\n      <Avatar url={props.avatar} />\n      <div className=\"User\">\n        <div className=\"Username\">{props.username !== \"\" && props.username}</div>\n        <div className=\"Userpoints\">\n          <b>9.999</b>\n          <img\n            style={{ height: \"32px\", paddingLeft: \"7px\" }}\n            src={icon_star_purple}\n          ></img>\n        </div>\n        <div className=\"Descriptor\">STERNE</div>\n      </div>\n    </div>\n  </div>)\n}","import React from \"react\";\nimport banner_orange from \"../assets/banner_orange.svg\";\nimport banner_blue from \"../assets/banner_blue.svg\";\nimport banner_red from \"../assets/banner_red.svg\";\nimport icon_star_white from \"../assets/icon_star_white.svg\";\nimport icon_star_purple from \"../assets/icon_star_purple.svg\";\n\ninterface Props{\n\n}\n\nexport const PointBars=(props:Props)=>{\n    return(<div className=\"SVGContainer\">\n    <div className=\"Social\">\n      <img src={banner_red}></img>\n      <div className=\"PointContainer\">\n        <div className=\"Points\">\n          <b>9.999</b>\n        </div>\n        <div className=\"Nameline\">AKTIV</div>\n      </div>\n      <div className=\"Star\">\n        <img style={{ height: \"16px\" }} src={icon_star_white}></img>\n      </div>\n    </div>\n    <div className=\"Hygiene\">\n      <img src={banner_blue}></img>\n      <div className=\"PointContainer\">\n        <div className=\"Points\">\n          <b>9.999</b>\n        </div>\n        <div className=\"Nameline\">GESUNDHEIT</div>\n      </div>\n      <div className=\"Star\">\n        <img style={{ height: \"16px\" }} src={icon_star_white}></img>\n      </div>\n    </div>\n    <div className=\"Behavior\">\n      <img src={banner_orange}></img>\n      <div className=\"PointContainer\">\n        <div className=\"Points\">\n          <b>9.999</b>\n        </div>\n        <div className=\"Nameline\">HELFEN</div>\n      </div>\n      <div className=\"Star\">\n        <img style={{ height: \"16px\" }} src={icon_star_white}></img>\n      </div>\n    </div>\n    </div>)\n}","import React, { useEffect, useState, useContext } from \"react\";\nimport { firestore } from \"firebase\";\nimport { AuthContext } from \"../App\";\nimport { UserData } from \"../interfaces/userData\";\nimport \"./home.css\";\nimport { Avatar } from \"../components/Avatar\";\nimport { Button } from \"@material-ui/core\";\nimport moment from \"moment\";\nimport banner_orange from \"../assets/banner_orange.svg\";\nimport banner_blue from \"../assets/banner_blue.svg\";\nimport banner_red from \"../assets/banner_red.svg\";\nimport icon_star_white from \"../assets/icon_star_white.svg\";\nimport icon_star_purple from \"../assets/icon_star_purple.svg\";\nimport { ProfileContainer } from \"../components/ProfielContainer\";\nimport { PointBars } from \"../components/PointBars\";\n\nexport const Home = () => {\n  const [username, setUsername] = useState(\"\");\n  const [avatar, setAvatar] = useState(\"\");\n  const [actions, setAction] = useState([]);\n  const userAuth = useContext(AuthContext);\n  const addTask = () => {\n    firestore()\n      .collection(\"users\")\n      .doc(userAuth.uid)\n      .update({\n        actions: firestore.FieldValue.arrayUnion({\n          type: \"test\",\n          title: \"do good stuff\",\n          points: 500,\n          date: moment().toISOString()\n        })\n      });\n  };\n  useEffect(() => {\n    if (userAuth.uid) {\n      firestore()\n        .collection(\"users\")\n        .doc(userAuth.uid)\n        .get()\n        .then(snapshot => {\n          if (snapshot && snapshot.exists) {\n            const data = snapshot.data() as UserData;\n            setUsername(data.username.toUpperCase());\n            setAvatar(data.avatar);\n          }\n        });\n    }\n  }, [userAuth]);\n  return (\n    <div className=\"homescreen\">\n     \n       <PointBars/>\n        <ProfileContainer username={username} avatar={avatar}/>\n       \n        <Button\n          onClick={() => {\n            addTask();\n          }}\n        >\n          Add tasks\n        </Button>\n    </div>\n  );\n};\n","import * as React from 'react';\nimport { auth } from 'firebase';\n\n\n\n\ninterface Props{}\n\nexport const Logout=()=> {\n  \n \n    return(<h4>signed out successfully</h4>)\n}\n","import React, {useContext} from 'react';\n\ninterface Props {}\n\nexport const Profile = (props: Props) => {\nreturn(\n    <div>\n        <h2>Profile</h2>\n    </div>\n);\n\n}","import React, { Component } from \"react\";\nimport { storage } from \"firebase\";\nimport { Avatar } from \"./Avatar\";\nimport \"./UploadAvatar.css\";\n\nclass ImageUpload extends Component<{onChange:(url:string)=>void}> {\n    state = {\n        image: null,\n        url: \"\",\n        progress: 0\n      };\n\n \n  handleUpload = (image:any) => {\n   \n    \n    console.log(image)\n    if(image!==null){\n        /// @ts-ignore\n        const uploadTask = storage().ref(`images/${image.name}`).put(image);\n    uploadTask.on(\n      \"state_changed\",\n      snapshot => {\n        // progress function ...\n        const progress = Math.round(\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n        );\n        this.setState({ progress });\n      },\n      error => {\n        // Error function ...\n        console.log(error);\n      },\n      () => {\n        // complete function ...\n        // @ts-ignore\n        storage()\n          .ref(\"images\")\n          // @ts-ignore\n          .child(image.name)\n          .getDownloadURL()\n          .then(url => {\n            this.setState({ url });\n            this.props.onChange(url)\n          });\n      }\n    );\n    }\n    \n  };\n\n  render() {\n    return (\n      <div className=\"center\">\n       <Avatar\n          url={this.state.url || \"https://via.placeholder.com/400x300\"}\n         \n        />\n        <div className=\"file-field input-field\">\n          <div className=\"btn\">\n           \n            <input className=\"custom-file-input\" type=\"file\"  accept=\"image/*\" onChange={(e:any)=>{\n                // @ts-ignore\n                if (e.target.files[0]) {\n                    // @ts-ignore\n                    const image = e.target.files[0];\n                 \n                    if(image.size<1024*1024){\n                        this.setState(() => ({ image }));\n                        this.handleUpload(image)\n                    }else{\n                    alert(\"sorry, to big( max 1M)\")\n                    \n                    }\n                    \n                  }\n            }} />\n          </div>\n          <div className=\"file-path-wrapper\">\n           \n          </div>\n        </div>\n       \n        <br />\n        <br />\n       \n      </div>\n    );\n  }\n}\n\nexport default ImageUpload;","import React from \"react\";\nimport { AuthContext } from \"../App\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport { auth, firestore } from \"firebase\";\nimport { TextField, Button } from \"@material-ui/core\";\nimport ImageUpload from \"../components/UploadAvatar\";\n\n\n\n\nexport const Register = () => {\n  const [username, setUsername] = React.useState(\"\");\n  const [email, setEmail] = React.useState(\"\");\n  const [password, setPassword] = React.useState(\"\");\n  const [avatar, setAvatar] = React.useState(\"\");\n  const userAuth = React.useContext(AuthContext);\n  const history = useHistory();\n  const onRegister = () => {\n    try {\n      auth().setPersistence(auth.Auth.Persistence.LOCAL);\n      auth()\n        .createUserWithEmailAndPassword(email, password)\n        .then((res) => {\n          firestore()\n            .collection(\"users\")\n            .doc(res.user?.uid)\n            .set({ username,avatar });\n        });\n\n      history.push(\"/\");\n    } catch (error) {\n      alert(\"wrong login\");\n    }\n  };\n  return (\n    <div>\n      <h1>Register</h1>\n      <ImageUpload onChange={(url)=>setAvatar(url)}/>\n      <TextField\n       \n        label=\"username\"\n        onChange={e => setUsername(e.target.value)}\n      \n        value={username}\n      /> <br /> <br />\n       <TextField\n       \n        label=\"email\"\n      \n        type=\"email\"\n        onChange={e => setEmail(e.target.value)}\n     \n        value={email}\n      /> <br /> <br />\n       <TextField\n        label=\"password\"\n        type=\"password\"\n        onChange={e => setPassword(e.target.value)}\n        value={password}\n        \n      /> <br /> <br />\n      <Button  variant=\"contained\" color=\"primary\"  onClick={onRegister}>Register</Button>\n      <br />\n      <div className=\"RegisterLink\">\n        <Link className=\"Link\" to=\"/login\">Back to Login</Link>\n      </div>\n\n    </div>\n  );\n};\n","import * as React from \"react\";\nimport { auth } from \"firebase\";\nimport { AuthContext } from \"../App\";\nimport { Redirect, useHistory, Link } from \"react-router-dom\";\nimport { Button, TextField } from \"@material-ui/core\";\n\ninterface Props {}\n\nexport const ResetPassword = (props: Props) => {\n  const [email, setEmail] = React.useState(\"\");\n  const [send, setSend] = React.useState(false);\n\n  const onResetPassword = () => {\n    try {\n      auth().setPersistence(auth.Auth.Persistence.LOCAL);\n      const result = auth()\n        .sendPasswordResetEmail(email)\n        .then(() => {\n          setSend(true);\n        });\n    } catch (error) {\n      alert(\"wrong login\");\n    }\n  };\n  if (send) {\n    return (\n      <div>\n        <h1>Reset Password</h1>check your mail\n      </div>\n    );\n  }\n  return (\n    <div>\n      <h1>Reset Password</h1>\n\n      <TextField\n        id=\"outlined-basic\"\n        label=\"email\"\n       \n        type=\"email\"\n        onChange={e => setEmail(e.target.value)}\n      \n        value={email}\n     /> <br /> <br />\n      <Button variant=\"contained\" color=\"primary\" onClick={onResetPassword}>\n        Reset Password\n      </Button>\n        <br />\n      <div className=\"RegisterLink\">\n        <Link className=\"Link\" to=\"/login\">Back to Login</Link>\n      </div>\n    </div>\n  );\n};\n","import React, { useEffect, useState, useContext } from \"react\";\nimport \"./onboarding.css\"\n\n\nexport const Onboarding = () => {\n  const [screen, setScreen] = useState(\"\");\n \n  \n  return (\n    <div className=\"onboardingScreen\">\n    <div>title</div>\n    <div>text</div>\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { firebaseConfig } from \"./firebase.config\";\nimport { Login } from \"./screens/login\";\nimport  { PersistentDrawerRight } from './screens/drawer';\n\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nimport firebase, { auth } from \"firebase\";\nimport { Home } from \"./screens/home\";\nimport { Logout } from \"./screens/logout\";\nimport { Profile } from \"./screens/profile\";\nimport { Register } from \"./screens/register\";\nimport { ResetPassword } from \"./screens/resetPassword\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core\";\nimport { deepPurple } from \"@material-ui/core/colors\";\nimport { Onboarding } from \"./screens/onboarding\";\nconst theme = createMuiTheme({\n  palette: {\n    primary: deepPurple\n  }\n});\n\ninterface UserAuth {\n  uid?: string;\n  loggedIn: boolean;\n}\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const AuthContext = React.createContext({\n  uid: \"\",\n  loggedIn: false\n} as UserAuth);\n\nfunction App(props:any) {\n  const [userAuth, setUserAuth] = useState({ uid: \"\", loggedIn: false });\n  auth().onAuthStateChanged(a => {\n    if (a?.uid && userAuth.uid !== a?.uid) {\n      setUserAuth({ uid: a?.uid || \"\", loggedIn: true });\n    }\n    if (a?.uid === undefined && userAuth.uid) {\n      setUserAuth({ uid: \"\", loggedIn: false });\n    }\n  });\n\n\n  return (\n    <div className=\"App\">\n      <ThemeProvider theme={theme}>\n      <AuthContext.Provider value={userAuth}>\n        <Router>\n          {props.location?.pathname!=='/intro' && <PersistentDrawerRight/>}\n          <div style={{display:\"inline-block\",width:\"100%\",maxWidth:\"420px\",position:\"relative\"}}>\n            {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n\n            <Switch>\n            <Route path=\"/intro\">\n                <Onboarding />\n              </Route>\n              <Route path=\"/about\">\n                <About />\n              </Route>\n              <Route path=\"/profile\">\n                <Profile />\n              </Route>\n              <Route path=\"/login\">\n                <Login />\n              </Route>\n              <Route path=\"/logout\">\n                <Logout />\n              </Route>\n              <Route path=\"/register\">\n                <Register />\n              </Route>\n              <Route path=\"/resetPassword\">\n                <ResetPassword />\n              </Route>\n              <Route path=\"/\">\n                <Home />\n              </Route>\n            </Switch>\n          </div>\n        </Router>\n      </AuthContext.Provider>\n      </ThemeProvider>\n    </div>\n  );\n}\n\nfunction About() {\n  return <h2>About</h2>;\n}\n\nexport default App;\n","export const firebaseConfig = {\n    apiKey: \"AIzaSyDrQu6Ql1L0UhkPMYmM7KckxcK8XP7dZB4\",\n    authDomain: \"homehero-75b1d.firebaseapp.com\",\n    databaseURL: \"https://homehero-75b1d.firebaseio.com\",\n    projectId: \"homehero-75b1d\",\n    storageBucket: \"homehero-75b1d.appspot.com\",\n    messagingSenderId: \"356618601963\",\n    appId: \"1:356618601963:web:60312b641f8f21ca5445ae\"\n  };","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n// @ts-ignore\nif (window.cordova) {\n    document.addEventListener('deviceready', () => {\n        ReactDOM.render(<App />, document.getElementById('root'));\n\n    }, false);\n  } else {\n    ReactDOM.render(<App />, document.getElementById('root'));\n\n  }\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/icon_star_white.15afe75b.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon_star_purple.baf7d172.svg\";","module.exports = __webpack_public_path__ + \"static/media/avatar_preview.aa8a3a48.svg\";","module.exports = __webpack_public_path__ + \"static/media/banner_orange.f380ea87.svg\";","module.exports = __webpack_public_path__ + \"static/media/banner_blue.b4a22b9f.svg\";","module.exports = __webpack_public_path__ + \"static/media/banner_red.0639846e.svg\";"],"sourceRoot":""}