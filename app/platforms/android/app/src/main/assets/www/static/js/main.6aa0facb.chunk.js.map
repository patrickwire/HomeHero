{"version":3,"sources":["screens/login.tsx","screens/drawer.tsx","screens/home.tsx","screens/logout.tsx","components/UploadAvatar.tsx","screens/register.tsx","screens/resetPassword.tsx","App.tsx","firebase.config.ts","serviceWorker.ts","index.tsx"],"names":["Login","props","React","email","setEmail","password","setPassword","history","AuthContext","useHistory","TextField","id","label","variant","type","onChange","e","target","value","Button","color","onClick","auth","setPersistence","Auth","Persistence","LOCAL","signInWithEmailAndPassword","push","error","alert","to","useStyles","makeStyles","theme","root","display","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","width","easeOut","enteringScreen","marginRight","title","flexGrow","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","spacing","mixins","toolbar","justifyContent","content","contentShift","PersistentDrawerRight","classes","useTheme","useState","open","setOpen","className","CssBaseline","AppBar","position","clsx","Toolbar","Typography","noWrap","IconButton","aria-label","edge","Drawer","anchor","paper","direction","Divider","List","ListItem","button","key","ListItemIcon","ListItemText","primary","signOut","Home","username","setUsername","avatar","setAvatar","userAuth","useContext","useEffect","uid","firestore","collection","doc","get","then","snapshot","exists","data","src","Logout","ImageUpload","state","image","url","progress","handleUpload","storage","ref","name","put","on","Math","round","bytesTransferred","totalBytes","setState","console","log","child","getDownloadURL","this","max","accept","files","size","alt","height","Component","Register","createUserWithEmailAndPassword","res","user","set","ResetPassword","send","setSend","sendPasswordResetEmail","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","createContext","loggedIn","About","App","setUserAuth","onAuthStateChanged","a","undefined","Provider","path","Boolean","window","location","hostname","match","cordova","document","addEventListener","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.6aa0facb.chunk.js","sourcesContent":["import * as React from \"react\";\nimport { auth } from \"firebase\";\nimport { AuthContext } from \"../App\";\nimport { Redirect, useHistory, Link } from \"react-router-dom\";\nimport { TextField, Button } from \"@material-ui/core\";\n\ninterface Props {}\n\nexport const Login = (props: Props) => {\n  const [email, setEmail] = React.useState(\"\");\n  const [password, setPassword] = React.useState(\"\");\n  const userAuth = React.useContext(AuthContext);\n  const history = useHistory();\n  const onLogin = () => {\n    try {\n      auth().setPersistence(auth.Auth.Persistence.LOCAL);\n      const result = auth().signInWithEmailAndPassword(email, password);\n      history.push(\"/\");\n    } catch (error) {\n      alert(\"wrong login\");\n    }\n  };\n  return (\n    <div>\n      <h1>Login</h1>\n\n      <TextField\n        id=\"outlined-basic\"\n        label=\"email\"\n        variant=\"outlined\"\n        type=\"email\"\n        onChange={e => setEmail(e.target.value)}\n        value={email}\n      />\n      <br />\n      <br />\n      <TextField\n        id=\"outlined-basic\"\n        label=\"password\"\n        variant=\"outlined\"\n        type=\"password\"\n        onChange={e => setPassword(e.target.value)}\n        value={password}\n      />\n      <br />\n      <br />\n      <Button variant=\"contained\" color=\"secondary\" onClick={onLogin}>\n        Login\n      </Button>\n      <br></br>\n      <Link to=\"/register\">Register</Link>\n      <br></br>\n      <Link to=\"/resetPassword\">Reset Password</Link>\n    </div>\n  );\n};\n","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport HomeIcon from '@material-ui/icons/Home';\nimport InfoIcon from '@material-ui/icons/Info';\nimport {Link} from \"react-router-dom\";\nimport {auth} from \"firebase\";\n\nconst drawerWidth = 240;\ninterface Props{}\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginRight: drawerWidth,\n  },\n  title: {\n    flexGrow: 1,\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-start',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginRight: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginRight: 0,\n  },\n}));\n\nexport const PersistentDrawerRight=(props:Props)=> {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n      >\n        <Toolbar>\n          <Typography variant=\"h6\" noWrap className={classes.title}>\n            HomeHero\n          </Typography>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            edge=\"end\"\n            onClick={handleDrawerOpen}\n            className={clsx(open && classes.hide)}\n          >\n            <MenuIcon />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <main\n        className={clsx(classes.content, {\n          [classes.contentShift]: open,\n        })}\n      >\n        <div className={classes.drawerHeader} />\n      </main>\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"right\"\n        open={open}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <div className={classes.drawerHeader}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === 'rtl' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n          <Link to=\"/login\">\n            <ListItem button key=\"Login\">\n              <ListItemIcon><ExitToAppIcon /></ListItemIcon>\n              <ListItemText primary=\"Login\" />\n            </ListItem>\n          </Link>\n           <Link onClick={() => auth().signOut()} to=\"/logout\">\n            <ListItem button key=\"Logout\">\n              <ListItemIcon><ExitToAppIcon /></ListItemIcon>\n              <ListItemText primary=\"Logout\" />\n            </ListItem>\n          </Link>\n        </List>\n        <Divider />\n        <List>\n          <Link to=\"/\">\n            <ListItem button key=\"Home\">\n              <ListItemIcon><HomeIcon /></ListItemIcon>\n              <ListItemText primary=\"Home\" />\n            </ListItem>\n          </Link>\n          <Link to=\"/about\">\n            <ListItem button key=\"About\">\n              <ListItemIcon><InfoIcon /></ListItemIcon>\n              <ListItemText primary=\"About\" />\n            </ListItem>\n          </Link>\n        </List>\n      </Drawer>\n    </div>\n  );\n}","import React, { useEffect, useState, useContext } from \"react\";\nimport { firestore } from \"firebase\";\nimport { AuthContext } from \"../App\";\nimport { UserData } from \"../interfaces/userData\";\n\nexport const Home=()=> {\n    const [username,setUsername]=useState(\"\")\n    const [avatar,setAvatar]=useState(\"\")\n    const userAuth=useContext(AuthContext)\n    useEffect( ()=>{\n        if(userAuth.uid){\n            firestore().collection(\"users\").doc(userAuth.uid).get().then((snapshot)=>{\n                if(snapshot&&snapshot.exists){\n                    const data = snapshot.data() as UserData\n                    setUsername(data.username)\n                    setAvatar(data.avatar)\n                }\n               \n             })\n        }\n        \n    },[userAuth])\nreturn(<div><h2>Home</h2>{username!==\"\"&&\"hello \"+username}<br/><img src={avatar}/></div>);\n  }","import * as React from 'react';\nimport { auth } from 'firebase';\n\n\n\n\ninterface Props{}\n\nexport const Logout=()=> {\n  \n \n    return(<h4>signed out successfully</h4>)\n}\n","import React, { Component } from \"react\";\nimport { storage } from \"firebase\";\n\n\nclass ImageUpload extends Component<{onChange:(url:string)=>void}> {\n    state = {\n        image: null,\n        url: \"\",\n        progress: 0\n      };\n\n \n  handleUpload = () => {\n    const { image } = this.state;\n    if(image!==null){\n        /// @ts-ignore\n        const uploadTask = storage().ref(`images/${image.name}`).put(image);\n    uploadTask.on(\n      \"state_changed\",\n      snapshot => {\n        // progress function ...\n        const progress = Math.round(\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n        );\n        this.setState({ progress });\n      },\n      error => {\n        // Error function ...\n        console.log(error);\n      },\n      () => {\n        // complete function ...\n        // @ts-ignore\n        storage()\n          .ref(\"images\")\n          // @ts-ignore\n          .child(image.name)\n          .getDownloadURL()\n          .then(url => {\n            this.setState({ url });\n            this.props.onChange(url)\n          });\n      }\n    );\n    }\n    \n  };\n\n  render() {\n    return (\n      <div className=\"center\">\n          <br/>\n          <h2 className=\"green-text\">React Firebase Image Uploader</h2>\n          <br/>\n          <br/>\n        <div className=\"row\">\n          <progress value={this.state.progress} max=\"100\" className=\"progress\" />\n        </div>\n        <br />\n        <br />\n        <br />\n        <div className=\"file-field input-field\">\n          <div className=\"btn\">\n            <span>File</span>\n            <input type=\"file\"  accept=\"image/*\" onChange={(e:any)=>{\n                // @ts-ignore\n                if (e.target.files[0]) {\n                    // @ts-ignore\n                    const image = e.target.files[0];\n                 \n                    if(image.size<1024*1024){\n                        this.setState(() => ({ image }));\n                    }else{\n                    alert(\"sorry, to big( max 1M)\")\n                    \n                    }\n                    \n                  }\n            }} />\n          </div>\n          <div className=\"file-path-wrapper\">\n            <input className=\"file-path validate\" type=\"text\" />\n          </div>\n        </div>\n        <button\n          onClick={this.handleUpload}\n          className=\"waves-effect waves-light btn\"\n        >\n          Upload\n        </button>\n        <br />\n        <br />\n        <img\n          src={this.state.url || \"https://via.placeholder.com/400x300\"}\n          alt=\"Uploaded Images\"\n          height=\"300\"\n          width=\"400\"\n        />\n      </div>\n    );\n  }\n}\n\nexport default ImageUpload;","import React from \"react\";\nimport { AuthContext } from \"../App\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport { auth, firestore } from \"firebase\";\nimport { TextField, Button } from \"@material-ui/core\";\nimport ImageUpload from \"../components/UploadAvatar\";\n\n\n\n\nexport const Register = () => {\n  const [username, setUsername] = React.useState(\"\");\n  const [email, setEmail] = React.useState(\"\");\n  const [password, setPassword] = React.useState(\"\");\n  const [avatar, setAvatar] = React.useState(\"\");\n  const userAuth = React.useContext(AuthContext);\n  const history = useHistory();\n  const onRegister = () => {\n    try {\n      auth().setPersistence(auth.Auth.Persistence.LOCAL);\n      auth()\n        .createUserWithEmailAndPassword(email, password)\n        .then((res) => {\n          firestore()\n            .collection(\"users\")\n            .doc(res.user?.uid)\n            .set({ username,avatar });\n        });\n\n      history.push(\"/\");\n    } catch (error) {\n      alert(\"wrong login\");\n    }\n  };\n  return (\n    <div>\n      <h1>Register</h1>\n      <ImageUpload onChange={(url)=>setAvatar(url)}/>\n      <TextField\n        id=\"outlined-basic\"\n        label=\"username\"\n        variant=\"outlined\"\n        onChange={e => setUsername(e.target.value)}\n      \n        value={username}\n      /> <br /> <br />\n       <TextField\n        id=\"outlined-basic\"\n        label=\"email\"\n        variant=\"outlined\"\n        type=\"email\"\n        onChange={e => setEmail(e.target.value)}\n     \n        value={email}\n      /> <br /> <br />\n       <TextField\n        id=\"outlined-basic\"\n        label=\"password\"\n        variant=\"outlined\"\n        type=\"password\"\n        onChange={e => setPassword(e.target.value)}\n        value={password}\n        \n      /> <br /> <br />\n      <Button  variant=\"contained\" color=\"secondary\"  onClick={onRegister}>Register</Button>\n      <br /><Link to=\"/login\">Login</Link>\n    </div>\n  );\n};\n","import * as React from \"react\";\nimport { auth } from \"firebase\";\nimport { AuthContext } from \"../App\";\nimport { Redirect, useHistory, Link } from \"react-router-dom\";\nimport { Button, TextField } from \"@material-ui/core\";\n\ninterface Props {}\n\nexport const ResetPassword = (props: Props) => {\n  const [email, setEmail] = React.useState(\"\");\n  const [send, setSend] = React.useState(false);\n\n  const onResetPassword = () => {\n    try {\n      auth().setPersistence(auth.Auth.Persistence.LOCAL);\n      const result = auth()\n        .sendPasswordResetEmail(email)\n        .then(() => {\n          setSend(true);\n        });\n    } catch (error) {\n      alert(\"wrong login\");\n    }\n  };\n  if (send) {\n    return (\n      <div>\n        <h1>Reset Password</h1>check your mail\n      </div>\n    );\n  }\n  return (\n    <div>\n      <h1>Reset Password</h1>\n\n      <TextField\n        id=\"outlined-basic\"\n        label=\"password\"\n        variant=\"outlined\"\n        type=\"email\"\n        onChange={e => setEmail(e.target.value)}\n      \n        value={email}\n     /> <br /> <br />\n      <Button variant=\"contained\" color=\"secondary\" onClick={onResetPassword}>\n        ResetPassword\n      </Button>\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { firebaseConfig } from \"./firebase.config\";\nimport { Login } from \"./screens/login\";\nimport  { PersistentDrawerRight } from './screens/drawer';\n\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nimport firebase, { auth } from \"firebase\";\nimport { Home } from \"./screens/home\";\nimport { Logout } from \"./screens/logout\";\nimport { Register } from \"./screens/register\";\nimport { ResetPassword } from \"./screens/resetPassword\";\ninterface UserAuth {\n  uid?: string;\n  loggedIn: boolean;\n}\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const AuthContext = React.createContext({\n  uid: \"\",\n  loggedIn: false\n} as UserAuth);\n\nfunction App() {\n  const [userAuth, setUserAuth] = useState({ uid: \"\", loggedIn: false });\n  auth().onAuthStateChanged(a => {\n    if (a?.uid && userAuth.uid !== a?.uid) {\n      setUserAuth({ uid: a?.uid || \"\", loggedIn: true });\n    }\n    if (a?.uid === undefined && userAuth.uid) {\n      setUserAuth({ uid: \"\", loggedIn: false });\n    }\n  });\n  return (\n    <div className=\"App\">\n      <AuthContext.Provider value={userAuth}>\n        <Router>\n          <PersistentDrawerRight/>\n          <div>\n\n            {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n\n            <Switch>\n              <Route path=\"/about\">\n                <About />\n              </Route>\n              <Route path=\"/login\">\n                <Login />\n              </Route>\n              <Route path=\"/logout\">\n                <Logout />\n              </Route>\n              <Route path=\"/register\">\n                <Register />\n              </Route>\n              <Route path=\"/resetPassword\">\n                <ResetPassword />\n              </Route>\n              <Route path=\"/\">\n                <Home />\n              </Route>\n            </Switch>\n          </div>\n        </Router>\n\n\n\n      </AuthContext.Provider>\n    </div>\n  );\n}\n\nfunction About() {\n  return <h2>About</h2>;\n}\n\nexport default App;\n","export const firebaseConfig = {\n    apiKey: \"AIzaSyDrQu6Ql1L0UhkPMYmM7KckxcK8XP7dZB4\",\n    authDomain: \"homehero-75b1d.firebaseapp.com\",\n    databaseURL: \"https://homehero-75b1d.firebaseio.com\",\n    projectId: \"homehero-75b1d\",\n    storageBucket: \"homehero-75b1d.appspot.com\",\n    messagingSenderId: \"356618601963\",\n    appId: \"1:356618601963:web:60312b641f8f21ca5445ae\"\n  };","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n// @ts-ignore\nif (window.cordova) {\n    document.addEventListener('deviceready', () => {\n        ReactDOM.render(<App />, document.getElementById('root'));\n\n    }, false);\n  } else {\n    ReactDOM.render(<App />, document.getElementById('root'));\n\n  }\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}